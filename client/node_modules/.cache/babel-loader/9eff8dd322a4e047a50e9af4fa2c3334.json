{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anthony\\\\Desktop\\\\22.4\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction CategoryMenu() {\n  const categories = useSelector(state => state.categories);\n  const dispatch = useDispatch();\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Choose a Category:\"), categories.map(item => /*#__PURE__*/React.createElement(\"button\", {\n    key: item._id,\n    onClick: () => {\n      handleClick(item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, item.name)));\n}\n\nexport default CategoryMenu;","map":{"version":3,"sources":["C:/Users/Anthony/Desktop/22.4/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","useQuery","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","useSelector","useDispatch","CategoryMenu","categories","state","dispatch","loading","data","categoryData","type","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,iBAAT,EAA4BC,uBAA5B,QAA2D,qBAA3D;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAGA,SAASC,YAAT,GAAwB;AACtB,QAAOC,UAAU,GAAIH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAAhC;AACA,QAAME,QAAQ,GAAGJ,WAAW,EAA5B;AAIA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAkCb,QAAQ,CAACG,gBAAD,CAAhD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,YAAJ,EAAkB;AAChBH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEb,iBADC;AAEPO,QAAAA,UAAU,EAAEK,YAAY,CAACL;AAFlB,OAAD,CAAR;AAIAK,MAAAA,YAAY,CAACL,UAAb,CAAwBO,OAAxB,CAAgCC,QAAQ,IAAI;AAC1CZ,QAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,EAAsBY,QAAtB,CAAV;AACD,OAFD;AAGD,KARD,MAQO,IAAI,CAACL,OAAL,EAAc;AACnBP,MAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,CAAV,CAAgCa,IAAhC,CAAqCT,UAAU,IAAI;AACjDE,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAEb,iBADC;AAEPO,UAAAA,UAAU,EAAEA;AAFL,SAAD,CAAR;AAID,OALD;AAMD;AACF,GAjBQ,EAiBN,CAACK,YAAD,EAAeF,OAAf,EAAwBD,QAAxB,CAjBM,CAAT;;AAmBA,QAAMQ,WAAW,GAAGC,EAAE,IAAI;AACxBT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEZ,uBADC;AAEPkB,MAAAA,eAAe,EAAED;AAFV,KAAD,CAAR;AAID,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGX,UAAU,CAACa,GAAX,CAAeC,IAAI,iBAClB;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbL,MAAAA,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGD,IAAI,CAACE,IANR,CADD,CAFH,CADF;AAeD;;AAED,eAAejB,YAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nfunction CategoryMenu() {\r\n  const  categories  = useSelector(state => state.categories);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories\r\n      });\r\n      categoryData.categories.forEach(category => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then(categories => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = id => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map(item => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n"]},"metadata":{},"sourceType":"module"}